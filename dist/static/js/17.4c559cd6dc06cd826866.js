(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"4EQP":function(e,n,t){"use strict";t.r(n);var a=t("ToIM"),l=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",[t("details",[t("summary",[e._v("vue文件命名要以大写开头的驼峰命名，除页面文件以外")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("如：\nPassword.vue\nInputMoney.vue\n\n//页面组件\nhome.vue\n")])])]),e._v(" "),t("details",[t("summary",[e._v("vue对象书写顺序 components>mixins>props>data>computed>watch>周期函数>methods")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("<template>\n  <button @click=\"handleClick\">点击我<button>\n</template>\n<script>\n  export default {\n    components: {\n      ...\n    },\n    mixins: [...],\n    props: {\n      ...\n    },\n    data () {\n      return {\n        ...\n      }\n    },\n    computed: {\n      ...\n    },\n    watch: {\n      ...\n    },\n    mounted () {\n      console.log('mounted')\n    },\n    methods: {\n      handleClick () {\n        console.log('handleClick')\n      }\n    }\n  }\n<\/script>\n")])])]),e._v(" "),t("details",[t("summary",[e._v("props赋值和注册事件要用简写方式")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v('<template>\n  bad: \n  <button v-bind:disabled="disabled" v-on:click="handleClick">点击我<button>\n  good:\n  <button :disabled="disabled" @click="handleClick">点击我<button>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        disabled: false\n      }\n    },\n    methods: {\n      handleClick () {\n        console.log(\'handleClick\')\n      }\n    }\n  }\n<\/script>\n')])])]),e._v(" "),t("details",[t("summary",[e._v("尽量要用'{{}}'来代替v-text")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("<template>\n  bad: \n  <div v-text=\"text\"></div>\n  good: \n  <div>{{text}}</div>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        text: 'hello world'\n      }\n    }\n  }\n<\/script>\n")])])]),e._v(" "),t("details",[t("summary",[e._v("template模板内属性值要用双引号")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("<template>\n  bad: \n  <input value='value' />\n  good: \n  <input value=\"value\" />\n</template>\n")])])]),e._v(" "),t("details",[t("summary",[e._v("事件函数必需要以handle开头，以区分组件内部函数")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("<template>\n  <button @click=\"handleClick\">点击我<button>\n</template>\n<script>\n  export default {\n    methods: {\n      handleClick () {\n        console.log('handleClick')\n      }\n    }\n  }\n<\/script>\n")])])]),e._v(" "),t("details",[t("summary",[e._v('template模板内组件名都要全小写，如果没有slot要以"</>"形式去写')]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("bad:\n<template>\n  <Child><Child>\n</template>\n\ngood:\n<template>\n  <child/>\n</template>\n")])])]),e._v(" "),t("details",[t("summary",[e._v("template模板内组件props和注册事件函数过多，超多5个要就换行")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v('bad:\n<template>\n  <input :disabled="false" value="value" placeholder="请输入用户名" maxlength="20" @blur="handleBlur" @focus="handleFocus"/>\n</template>\n\ngood:\n<template>\n  <input\n    :disabled="false"\n    value="value"\n    placeholder="请输入用户名"\n    maxlength="20"\n    @blur="handleBlur"\n    @focus="handleFocus"/>\n</template>\n')])])]),e._v(" "),t("details",[t("summary",[e._v("要熟悉项目别名配置（/build/webpack.base.conf.js）,引入要别名，公共部分尽量用别名配置")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("bad:\nscript:\n  import utils form '../../utils'\nstyle:\n  @import '../../styles/var';\n\ngood:\nscript:\n  import utils form 'utils'\nstyle:\n  @import '~styles/var';\n")])])]),e._v(" "),t("details",[t("summary",[e._v("组件props和事件的命名应该参照w3c表单标签和现有的组件库(element)，这样能尽量保持命名一致性")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v(' bad:\n<template>\n  <my-input :text="value" @text-change="handleChange"/>\n</template>\n\ngood:\n<template>\n  <my-input :value="value" @change="handleChange"/>\n</template>\n')])])]),e._v(" "),t("details",[t("summary",[e._v("二次封装组件要尽量可能保持原有的props和事件")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v('#密码输入框组件\n<template>\n  <el-input v-bind="$props" v-on="$listeners" :type="myType">\n    <template v-if="lockIcon" slot="prepend">\n      <i class="iconfont" v-html="lockIcon"></i>\n    </template>\n    <div slot="append" @click="handleEye" class="eye" style="cursor:pointer;">\n      <i class="iconfont" v-html="myType==\'password\' ? icons[0] : icons[1]"></i>\n    </div>\n  </el-input>\n</template>\n<script>\n  import {Input} from \'@element-ui\'\n  export default {\n    componentName: \'EPassword\',\n    props: {\n      ...Input.props, // 引入element input组件的props\n      placeholder: { // 可以重写Input.props的placeholder\n        type: String,\n        default: \'请输入密码\'\n      },\n      type: {\n        type: String,\n        default: \'password\'\n      },\n      lockIcon: {\n        type: String,\n        default: \'&#xe633;\'\n      },\n      icons: {\n        type: Array,\n        default () {\n          return [\'&#xe60b;\', \'&#xe622;\']\n        }\n      }\n    },\n    data () {\n      return {\n        myType: this.type\n      }\n    },\n    methods: {\n      handleEye () {\n        this.myType = this.myType === \'password\' ? \'text\' : \'password\'\n      }\n    }\n  }\n<\/script>\n')])])]),e._v(" "),t("details",[t("summary",[e._v("表单类组件必需有支持单向(value&change事件)和双向(v-model)数据模式，blur|focus|keyup事件也要考虑组件是否需要暴露出来")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("<template>\n  <input :value=\"value\" @change=\"handleChange\" />\n</template>\n<script>\n  export default {\n    props: {\n      value: {\n        type: String\n      }\n    },\n    methods: {\n      handleChange (e) {\n        this.$emit('input', e.target.value).$emit('change', e.target.value) //触发input事件可以实现v-model双向数据绑定\n      }\n    }\n  }\n<\/script>\n")])])]),e._v(" "),t("details",[t("summary",[e._v("css要以-中划线方式命名，不要以驼峰或者_下划线命名")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v('bad:\n<style lang="scss">\n  .module_userName {\n    font-size: 14px;\n  }\n  // 复杂块名：action_sheet\n  .action_sheet__item {\n    font-size: 14px;\n  }\n</style>\ngood:\n<style lang="scss">\n  .module-username {\n    font-size: 14px;\n  }\n  // 复杂块名：action-sheet\n  .action-sheet--item {\n    font-size: 14px;\n  }\n</style>\n')])])]),e._v(" "),t("details",[t("summary",[e._v("jsx渲染方案可以用来代替vnode渲染方案，其他的尽可能的用渲染模板方案")]),e._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[e._v("无\n")])])]),e._v(" "),t("p",[e._v("更好的vue风格："),t("a",{attrs:{href:"https://cn.vuejs.org/v2/style-guide/index.html"}},[e._v("https://cn.vuejs.org/v2/style-guide/index.html")])])])}],!1,null,null,null);n.default=l.exports}}]);