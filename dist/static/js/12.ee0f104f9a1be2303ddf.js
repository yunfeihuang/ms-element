(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{hGGe:function(n,e,t){"use strict";t.r(e);var r=t("ToIM"),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("section",[t("h1",[n._v("开发组件到发布Npm流程")]),n._v(" "),t("h3",[n._v("step1: src/components/目录下创建vue组件(二维码组件示例)")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("<template>\n  <div class=\"qr-code\" style=\"display:inline-block\"></div>\n</template>\n\n<script>\n  export default {\n    componentName: 'EQrCode', // componentName设置组件名称\n    props: {\n      text: {\n        type: String,\n        default: ''\n      },\n      height: {\n        type: Number,\n        default: 200\n      },\n      width: {\n        type: Number,\n        default: 200\n      }\n    },\n    mounted () {\n      require.ensure([], (r) => {\n        let QRCode = require('qrcodejs2')\n        this.$$qrcode = new QRCode(this.$el, {\n          ...this.$props\n        })\n      })\n    },\n    watch: {\n      text (value) {\n        this.$$qrcode.clear()\n        this.$$qrcode.makeCode(value)\n      }\n    },\n    destroyed () {\n      this.$$qrcode = null\n    }\n  }\n<\/script>\n#注意：组件内不要有style块，style块会增加cooking打包单文件的体积，如果增加样式请到src/components/styles/创建scss文件，并要在index.scss引入创建scss文件\n")])]),n._v(" "),t("h3",[n._v("step2：在src/mds/目录下创建md文件，文件要和组件名保持一致，在src/nav.config.js配置markdown路由")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("  {\n    path: '/qrcode',\n    title: 'QrCode二维码'\n  }\n")])]),n._v(" "),t("h3",[n._v("step3：编辑md文件")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("  # 二维码\n  <e-qr-code :text=\"text\"></e-qr-code>\n  ``` html\n  <template>\n    <e-qr-code :text=\"text\"/>\n  </template>\n  <script>\n    import EQrCode from 'e-ui/QrCode' // 这里引入组件要用e-ui别名\n    export default {\n      components: {\n        EQrCode\n      },\n      data () {\n        return {\n          text: 'http://www.baidu.com'\n        }\n      },\n      mounted () {\n        setTimeout(() => {\n          this.text = 'http://www.qq.com'\n        }, 2000)\n      }\n    }\n  <\/script>\n  ``` html\n  ### Extends\n  [qrcodejs](https://github.com/davidshimjs/qrcodejs)\n\n  ### Props\n  | 参数      | 说明    | 类型      | 可选值       | 默认值   |\n  |---------- |-------- |---------- |------------- |--------- |\n  | text     | 二维码文本   | string  |   -       |    -    |\n  | height     | 二维码图片高度   | number  |   -       |    200    |\n  | width     | 二维码图片宽度   | number  |   -       |    200    |\n\n  ### Events\n  | 事件名称 | 说明 | 回调参数 |\n  |---------|--------|---------|\n  | - | - | - |\n\n  ### Slots\n  | 名称 | 说明 | \n  |---------|--------|\n  | - | - |\n  \n  #更多markdown编写语法查看：https://markdown-it.github.io/\n")])]),n._v(" "),t("h3",[n._v("step4：配置项目根目录下的components.json，cooking打包需要配置打包的文件")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('  "QrCode": "./src/components/QrCode",\n')])]),n._v(" "),t("h3",[n._v("step5：项目打包，打包完成后会在lib目录生成对应的文件")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("  #样式主题打包\n  npm run build:theme\n  #组件打包\n  npm run build:cooking\n")])]),n._v(" "),t("h3",[n._v("step6：npm发布")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("  1.修改package.json版本号\n  2.npm登录，需要输入帐号，密码及确认邮箱\n    npm login\n  3.发布\n    npm publish\n  \n")])])])}],!1,null,null,null);e.default=s.exports}}]);