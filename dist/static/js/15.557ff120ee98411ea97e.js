(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{ACuo:function(n,e,t){"use strict";t.r(e);var s=t("ToIM"),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("section",[t("h1",[n._v("常见问题之Template区块")]),n._v(" "),t("details",[t("summary",[n._v("使用v-for指令时不要忘记赋值key")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('<template>\n  <ul>\n    <li v-for="(item, index) in list" :key="index">\n      {{item}}\n    </li>\n  <ul>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        list: [1, 2, 3, 4, 5]\n      }\n    }\n  }\n<\/script>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("template标签下必须只一个根标签或者组件")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("<template>\n  <div>root tag</div>\n</template>\n<script>\n  export default {}\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("v-model不能直接绑定props，props只能在外部改变")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('<template>\n  <input v-model="value" />\n</template>\n<script>\n  export default {\n    props: {\n      value: {\n        type: String\n      }\n    }\n  }\n<\/script>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("注册事件没有入参函数不要调用函数")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('<template>\n  \x3c!--应该要 @click="handleClick" --\x3e\n  <button @click="handleClick()">点击我</button>\n</template>\n<script>\n  export default {\n    methods: {\n      handleClick () {\n        console.log(\'handleClick\')\n      }\n    }\n  }\n<\/script>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("想在事件函数获取事件对象要传入$event关键字")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("<template>\n  <button @click=\"handleClick($event)\">点击我</button>\n</template>\n<script>\n  export default {\n    methods: {\n      handleClick (e) {\n        console.log('event:', e)\n      }\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("需要在事件函数缓存入参数据可以直接调用函数")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('<template>\n  <ul>\n    <li v-for="(item, index) in list" :key="index" @click="handleClick(index)">\n      {{item}}\n    </li>\n  <ul>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        list: [1, 2, 3, 4, 5]\n      }\n    },\n    methods: {\n      handleClick (index) {\n        console.log(\'index:\', index)\n      }\n    }\n  }\n<\/script>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("组件内要慎用id dom操作, id是唯一的，如果页面同时出现两个此组件就会有异常")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('<template>\n  <button @click="handleClick($event)" id="btn-test">点击我</button>\n</template>\n<script>\n  export default {\n    methods: {\n      handleClick (e) {\n        document.getElementById(\'btn-test\').disabled = true\n      }\n    }\n  }\n<\/script>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("尽量不要通过ref特性修改UI和关联数据流，所有的ui变化尽量要用props和data")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad: \n<template>\n  <child ref=\"child\" @click=\"handleClick\" />\n</template>\n<script>\n  export default {\n    components: {\n      child: {\n        props: {\n          disabled: {\n            type: Boolean,\n            default: false\n          }\n        },\n        data () {\n          return {\n            loading: false\n          }\n        },\n        render (createElement) {\n          return createElement('div', {\n            domProps: {\n              innerHTML: this.disabled + this.loading\n            }\n          })\n        }\n      }\n    },\n    methods: {\n      handleClick () {\n        if (this.$refs.child.disabled) {\n          console.log('disabled next')\n        } else {\n          this.$refs.child.loading = true\n          console.log('go to next')\n        }\n      }\n    }\n  }\n<\/script>\n\ngood: \n<template>\n  <child :disabled=\"disabled\" :loading=\"loading\" @click=\"handleClick\" />\n</template>\n<script>\n  export default {\n    components: {\n      child: {\n        props: {\n          disabled: {\n            type: Boolean,\n            default: false\n          },\n          loading : {\n            type: Boolean,\n            default: false\n          }\n        },\n        render (createElement) {\n          return createElement('div', {\n            domProps: {\n              innerHTML: this.disabled + this.loading\n            }\n          })\n        }\n      }\n    },\n    data () {\n      return {\n        disabled: false,\n        loading: true\n      }\n    },\n    methods: {\n      handleClick () {\n        if (this.disabled) {\n          console.log('disabled next')\n        } else {\n          this.loading = true\n          console.log('go to next')\n        }\n      }\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("避免v-if 和 v-for 同时用在一个元素上（性能问题）")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://cn.vuejs.org/v2/style-guide/index.html#%E9%81%BF%E5%85%8D-v-if-%E5%92%8C-v-for-%E7%94%A8%E5%9C%A8%E4%B8%80%E8%B5%B7-%E5%BF%85%E8%A6%81"}},[n._v("https://cn.vuejs.org/v2/style-guide/index.html#避免-v-if-和-v-for-用在一起-必要")])])]),n._v(" "),t("h1",[n._v("常见问题之Style区块")]),n._v(" "),t("details",[t("summary",[n._v("优先使用预处理器编写样式")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad: \n<style>\n  .css {\n    font-size: 14px;\n  }\n</style>\n\ngood: \n<style lang="scss">\n  .css {\n    font-size: 14px;\n  }\n</style>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("禁止写可读性可维护差的样式代码")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad: \n<style lang="scss">\n  .content h1{font-size:22px}\n  .content p{font-size:16px}\n</style>\n\ngood: \n<style lang="scss">\n  .content{\n    h1{\n      font-size:22px\n    }\n    p{\n      font-size:16px\n    }\n  }\n</style>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("避免设计嵌套过深的选择器, 影响性能")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad: \n<style lang="scss">\n  .list{\n    .list-item{\n      section{\n        h4 {\n          font-size: 20px;\n        }\n      }\n    }\n  }\n  #编译后结果：.list .list-item section h4\n</style>\n\ngood: \n<style lang="scss">\n  .list{\n    h4 {\n      font-size: 20px;\n    }\n  }\n  #编译后结果：.list h4\n</style>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("组件内style块不允许直接使用公共样式的选择器和ui组件库的相关选择器")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad: \n<style lang="scss">\n  .el-input{\n    background:red;\n  }\n</style>\ngood:\n<style lang="scss">\n  .my-input{\n     .el-input{\n      background:red;\n     }\n   }\n</style>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("业务组件style标签要加scoped属性,除非这个组件公用性非常强，UI组件一般不建议使用scoped")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad:\n<style lang="scss">\n  .topic-list{\n    background:red;\n  }\n</style>\ngood:\n<style lang="scss" scope>\n  .topic-list{\n     .el-input{\n      background:red;\n     }\n   }\n</style>\n')])])]),n._v(" "),t("h1",[n._v("常见问题之Script区块")]),n._v(" "),t("details",[t("summary",[n._v("触发渲染数据操作写在一起，尽量减少触发渲染")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad: \n  export default {\n    data () {\n      let list = [{name:'name1'},{name:'name1'},{name:'name1'}]\n      return {\n        length: 0,\n        list\n      }\n    },\n    methods: {\n      handleChange () {\n        this.length = this.list.length // 触发渲染\n        this.list.forEach(item => {\n          item.name = 'name' + Math.random() // 触发渲染\n        })\n      }\n    }\n  }\n  good: \n  export default {\n    data () {\n      let list = [{name:'name1'},{name:'name1'},{name:'name1'}]\n      return {\n        length: 0,\n        list\n      }\n    },\n    methods: {\n      handleChange () {\n        let list = Object.assign([], this.list)\n        list.forEach(item => {\n          item.name = 'name' + Math.random()\n        })\n        // 触发渲染\n        this.length = list.length \n        this.list = list\n      }\n    }\n  }\n")])])]),n._v(" "),t("details",[t("summary",[n._v("要尽可能使用ES5+去写来提高代码的简洁和可维护性")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("1. 数组循环尽量不要用for i,多用forEach,map,for of\n2. 字符串拼接多用反单引号和'${}'\n3. 使用解构和箭头函数\n\n更多查看：https://github.com/yuche/javascript\n")])])]),n._v(" "),t("details",[t("summary",[n._v("对文件引而不用，造成文件体积变大")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad: \n<template>\n  \x3c!--template里ECarouselItem,ECarousel组件没有用到--\x3e\n  <div><div>\n</template>\n<script>\n  import {ECarousel, ECarouselItem} from 'e-ui/carousel'\n  export default {\n    components: {\n      ECarousel,\n      ECarouselItem\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("慎用import或者require方式引入图片，多用静态目录下的根引入方式")]),n._v(" "),t("h4",[n._v("注意：import或者require方式引入过多会损耗webpack构建速度,"),t("a",{attrs:{href:"https://zh.nuxtjs.org/guide/assets"}},[n._v("webpack图片构建详情")])]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v('bad: \n<template>\n  <img src="~assets/image.png">\n</template>\n\ngood:\n<template>\n  \x3c!--放入static目录即可--\x3e\n  <img src="/image.png">\n</template>\n')])])]),n._v(" "),t("details",[t("summary",[n._v("像弹框，依赖其他库等要多用按需加载，以减少打包后单个文件体积")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad:\n<script>\n  import QRCode from 'qrcodejs2'\n  export default {\n    mounted () {\n      this.$$qrcode = new QRCode(this.$el, {\n        ...this.$props\n      })\n    }\n  }\n<\/script>\n\ngood:\n<script>\n  export default {\n    mounted () {\n      require.ensure([], (r) => { // 异步加载\n        let QRCode = require('qrcodejs2')\n        this.$$qrcode = new QRCode(this.$el, {\n          ...this.$props\n        })\n      })\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("非渲染属性要与data,computed,props用$$或者$_区分开来")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad:\n<script>\n  export default {\n    data () {\n      return {\n        message: 'hello world' // 渲染属性\n      }\n    },\n    mounted () {\n      this.isReady = true // 非渲染属性\n    }\n  }\n<\/script>\n\ngood:\n<script>\n  export default {\n    data () {\n      return {\n        message: 'hello world' // 渲染属性\n      }\n    },\n    mounted () {\n      this.$_isReady = true  // 非渲染属性\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("杜绝写空的data,computed,props,methods保持代码的干净")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("bad:\n<script>\n  export default {\n    data () {\n      return {}\n    },\n    methods: {\n      handleClick () {\n        console.log('handleClick')\n      }\n    }\n  }\n<\/script>\n\ngood:\n<script>\n  export default {\n    methods: {\n      handleClick () {\n        console.log('handleClick')\n      }\n    }\n  }\n<\/script>\n")])])]),n._v(" "),t("details",[t("summary",[n._v("import引入文件名没有区分大小写问题")]),n._v(" "),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[n._v("  由于windows环境不区分大小写，而linux却区分大小写。这样就导致在开发，测试，生产环境webpack构建打包失败\n")])])]),n._v(" "),t("details",[t("summary",[n._v("组件拆分颗粒问题，保持更优的合理度，单一职责，可维护性，避免文件过大")])])])}],!1,null,null,null);e.default=r.exports}}]);